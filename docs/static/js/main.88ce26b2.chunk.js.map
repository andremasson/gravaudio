{"version":3,"sources":["actions/record.js","actions/types.js","components/NavBar.js","components/Dialog.js","utils/Storage.js","utils/AudioLib.js","actions/audio.js","components/RecordElement.js","components/Loading.js","components/RecordsView.js","components/NewRecording.js","components/RecordButton.js","reducers/record.js","reducers/audio.js","reducers/config.js","reducers/index.js","store.js","components/AudioPlayer.js","App.js","utils/startup.js","index.js"],"names":["updateQuery","query","dispatch","a","type","payload","connect","useState","visible","setVisible","className","placeholder","value","onChange","e","target","onClick","Dialog","message","positiveAction","cancelAction","cancelButton","window","IDBTransaction","webkitIDBTransaction","IDBKeyRange","webkitIDBKeyRange","db","indexedDB","console","log","request","open","SaveData","data","transaction","oncomplete","event","objectStore","add","onsuccess","GetData","saveId","func","undefined","req","get","result","onupgradeneeded","createObjectStore","keyPath","createIndex","unique","onerror","AudioLib","StartRecording","StopRecording","GetDataURL","Play","Stop","RemoveRecord","Download","mimeType","mediaRecorder","audioCtl","intervalHandler","callback","navigator","mediaDevices","getUserMedia","audio","then","stream","chunks","blob","MediaRecorder","onstop","Blob","file","File","fileReader","FileReader","onload","evt","audio_id","audio_file","readAsArrayBuffer","ondataavailable","push","start","stop","readData","readAsDataURL","onStop","clearInterval","document","createElement","source","src","appendChild","body","play","setInterval","ended","pause","load","localStorage","removeItem","delete","DeleteData","name","filename","audioURL","URL","createObjectURL","style","display","href","download","click","revokeObjectURL","stopAudio","deleteRecord","id","saveRecord","record","playAudio","idAudio","displayDialog","setDisplayDialog","setName","editing","setEditing","audioUrl","setAudioUrl","useEffect","dataUrl","onSubmit","preventDefault","toUpperCase","autoFocus","onBlur","maxLength","moment","timestamp","format","recLength","Loading","records","filter","rec","indexOf","loading","length","map","key","NewRecording","addRecord","uuid","setUuid","timer","setTimer","isRecording","setRecording","minutes","seconds","milliseconds","splitTimer","setSplitTimer","uuidv4","currentDate","Date","getMinutes","getSeconds","getMilliseconds","toString","saveRecording","prototype","PropTypes","isRequired","now","RecordButton","modalOpen","setModalOpen","initialState","error","lastRecordingIndex","isPlaying","menuStatus","combineReducers","state","action","config","middleware","thunk","persistedState","getItem","JSON","parse","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","subscribe","setItem","stringify","getState","audioLib","App","recordings","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88ce26b2.chunk.js","sourcesContent":["import {\r\n    GET_RECORDS,\r\n    ADD_RECORD,\r\n    DELETE_RECORD,\r\n    SAVE_RECORD,\r\n    UPDATE_QUERY,\r\n} from \"./types\";\r\n\r\nexport const getRecords = () => async (dispatch) => {\r\n    dispatch({\r\n        type: GET_RECORDS,\r\n    });\r\n};\r\n\r\nexport const deleteRecord = (id) => async (dispatch) => {\r\n    dispatch({\r\n        type: DELETE_RECORD,\r\n        payload: id,\r\n    });\r\n};\r\n\r\nexport const addRecord = (record) => async (dispatch) => {\r\n    record[\"timestamp\"] = Date.now();\r\n    dispatch({\r\n        type: ADD_RECORD,\r\n        payload: record,\r\n    });\r\n};\r\n\r\nexport const saveRecord = (record) => async (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_RECORD,\r\n        payload: record,\r\n    });\r\n};\r\n\r\nexport const updateQuery = (query) => async (dispatch) => {\r\n    dispatch({\r\n        type: UPDATE_QUERY,\r\n        payload: query,\r\n    });\r\n};\r\n","export const GET_RECORDS = \"GET_RECORDS\";\r\nexport const DELETE_RECORD = \"DELETE_RECORD\";\r\nexport const ADD_RECORD = \"ADD_RECORD\";\r\nexport const SAVE_RECORD = \"SAVE_RECORD\";\r\nexport const UPDATE_QUERY = \"UPDATE_QUERY\";\r\n\r\nexport const PLAY_AUDIO = \"PLAY_AUDIO\";\r\nexport const STOP_AUDIO = \"STOP_AUDIO\";\r\n\r\nexport const OPEN_MENU = \"OPEN_MENU\";\r\nexport const CLOSE_MENU = \"CLOSE_MENU\";\r\n","import React, {useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateQuery} from \"../actions/record\";\r\n\r\nconst NavBar = ({query, updateQuery}) => {\r\n    const [visible, setVisible] = useState(\"\");\r\n    return (\r\n        <header>\r\n            <div className=\"title\">\r\n                <h3>Gravaudio</h3>{\" \"}\r\n            </div>{\" \"}\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar...\"\r\n                    value={query}\r\n                    onChange={(e) => updateQuery(e.target.value)}\r\n                />\r\n            </div>{\" \"}\r\n            <div className=\"action-bar\">\r\n                <div\r\n                    className=\"icon-button primary\"\r\n                    onClick={() => setVisible(\"show\")}>\r\n                    <i className=\"material-icons primary\"> account_circle </i>{\" \"}\r\n                </div>{\" \"}\r\n                <div\r\n                    className=\"icon-button danger\"\r\n                    onClick={() => setVisible(\"show\")}>\r\n                    <i className=\"material-icons\"> settings </i>{\" \"}\r\n                </div>{\" \"}\r\n            </div>{\" \"}\r\n            <span\r\n                className={`tooltip ${visible}`}\r\n                onClick={() => setVisible(\"\")}>\r\n                Em breve...\r\n            </span>\r\n        </header>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({query}) => ({\r\n    query,\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateQuery})(NavBar);\r\n","import React, {useState, Fragment} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Dialog = ({message, positiveAction, cancelAction}) => {\r\n    const [visible, setVisible] = useState(\"overlay-visible\");\r\n    const cancelButton = () => {\r\n        setVisible(\"overlay-invisible\");\r\n        if (cancelAction) cancelAction();\r\n    };\r\n    return (\r\n        <div className={`${visible}`} onClick={() => cancelAction()}>\r\n            <div className=\"card dialog\">\r\n                <div className=\"message\">{message}</div>\r\n                <div className=\"actions\">\r\n                    {positiveAction ? (\r\n                        <Fragment>\r\n                            <button\r\n                                className=\"danger\"\r\n                                onClick={() => positiveAction()}>\r\n                                Sim\r\n                            </button>\r\n                            <button\r\n                                className=\"secondary\"\r\n                                onClick={() => cancelButton()}>\r\n                                Não\r\n                            </button>\r\n                        </Fragment>\r\n                    ) : (\r\n                        <button\r\n                            className=\"primary\"\r\n                            onClick={() => cancelButton()}>\r\n                            Voltar\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDialog.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    positiveAction: PropTypes.func,\r\n    cancelAction: PropTypes.func,\r\n};\r\n\r\nexport default Dialog;\r\n","// Código de: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\r\n\r\n/*\r\nwindow.indexedDB =\r\n    window.indexedDB ||\r\n    window.webkitIndexedDB ||\r\n    window.mozIndexedDB ||\r\n    window.msIndexedDB;\r\n    */\r\nwindow.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction;\r\nwindow.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange;\r\nvar dbVersion = 1;\r\nvar dbName = \"audioDB\";\r\nvar storeName = \"audioStore\";\r\n\r\nif (!window.indexedDB) {\r\n    console.log(\"Browser does not support IndexedDB\");\r\n}\r\nvar db;\r\n\r\nvar request = window.indexedDB.open(dbName, dbVersion);\r\n\r\nexport const SaveData = (data) => {\r\n    var transaction = db.transaction(storeName, \"readwrite\");\r\n    transaction.oncomplete = function (event) {\r\n        // Success\r\n    };\r\n\r\n    var objectStore = transaction.objectStore(storeName);\r\n    var req = objectStore.add(data);\r\n    req.onsuccess = function (event) {\r\n        // Success\r\n    };\r\n};\r\n\r\nexport const GetData = (saveId, func) => {\r\n    if (saveId === undefined) return;\r\n    if (db !== undefined) {\r\n        var transaction = db.transaction(storeName);\r\n        var objectStore = transaction.objectStore(storeName);\r\n        var req = objectStore.get(saveId);\r\n        req.onsuccess = function (event) {\r\n            func(req.result);\r\n        };\r\n    }\r\n};\r\n\r\nexport const DeleteData = (saveId) => {\r\n    db.transaction(storeName, \"readwrite\")\r\n        .objectStore(storeName)\r\n        .delete(saveId);\r\n};\r\n\r\nrequest.onupgradeneeded = function (event) {\r\n    var db = event.target.result;\r\n    var objectStore = db.createObjectStore(storeName, {keyPath: \"audio_id\"});\r\n    objectStore.createIndex(\"audio_id\", \"audio_id\", {unique: true});\r\n};\r\n\r\nrequest.onerror = function (event) {\r\n    console.log(\"Error creating IndexdDB database\");\r\n};\r\n\r\nrequest.onsuccess = function (event) {\r\n    // Success\r\n    db = event.target.result;\r\n\r\n    db.onerror = function (event) {\r\n        // Handle error\r\n    };\r\n};\r\n","import {SaveData, GetData, DeleteData} from \"./Storage\";\r\n\r\nconst AudioLib = {\r\n    StartRecording: null,\r\n    StopRecording: null,\r\n    GetDataURL: null,\r\n    Play: null,\r\n    Stop: null,\r\n    RemoveRecord: null,\r\n    Download: null,\r\n};\r\n\r\nconst mimeType = \"audio/webm;codecs=opus\";\r\n\r\nlet mediaRecorder = null;\r\nlet audioCtl = null;\r\nlet intervalHandler = null;\r\n\r\nAudioLib.StartRecording = (saveId, callback = null) => {\r\n    navigator.mediaDevices.getUserMedia({audio: true}).then(function (stream) {\r\n        let chunks = [];\r\n        let blob = null;\r\n        mediaRecorder = new MediaRecorder(stream, {mimeType});\r\n        mediaRecorder.onstop = async (e) => {\r\n            blob = new Blob(chunks, {type: mimeType});\r\n\r\n            // Salvar IndexedDB\r\n            let file = new File([blob], {\r\n                type: mimeType,\r\n            });\r\n            let fileReader = new FileReader();\r\n            fileReader.onload = function (evt) {\r\n                SaveData({audio_id: saveId, audio_file: evt.target.result});\r\n            };\r\n            fileReader.readAsArrayBuffer(file);\r\n        };\r\n        mediaRecorder.ondataavailable = function (e) {\r\n            chunks.push(e.data);\r\n        };\r\n        mediaRecorder.start();\r\n        if (callback !== null) callback();\r\n    });\r\n};\r\n\r\nAudioLib.StopRecording = () => {\r\n    if (mediaRecorder !== null) mediaRecorder.stop();\r\n};\r\n\r\nAudioLib.GetDataURL = (saveId, callback = null) => {\r\n    GetData(saveId, (data) => {\r\n        if (data !== undefined) {\r\n            const file = new File([data.audio_file], {type: mimeType});\r\n            let fileReader = new FileReader();\r\n            fileReader.onload = function (readData) {\r\n                if (callback !== null) {\r\n                    callback(readData.target.result);\r\n                }\r\n            };\r\n            fileReader.readAsDataURL(file);\r\n        }\r\n    });\r\n};\r\n\r\nAudioLib.Play = (saveId, onStop = null) => {\r\n    if (audioCtl !== null) {\r\n        AudioLib.Stop();\r\n    }\r\n    if (intervalHandler !== null) {\r\n        clearInterval(intervalHandler);\r\n    }\r\n    GetData(saveId, (data) => {\r\n        const file = new File([data.audio_file], {type: mimeType});\r\n        let fileReader = new FileReader();\r\n        fileReader.onload = function (readData) {\r\n            audioCtl = document.createElement(\"audio\");\r\n            let source = document.createElement(\"source\");\r\n            source.src = readData.target.result;\r\n            source.type = mimeType;\r\n            audioCtl.appendChild(source);\r\n            document.body.appendChild(audioCtl);\r\n            audioCtl.play();\r\n\r\n            intervalHandler = setInterval(function () {\r\n                if (audioCtl && audioCtl.ended) {\r\n                    if (onStop !== null) onStop();\r\n                    audioCtl = null;\r\n                    clearInterval(intervalHandler);\r\n                }\r\n            }, 100);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    });\r\n};\r\n\r\nAudioLib.Stop = () => {\r\n    if (audioCtl !== null) {\r\n        audioCtl.pause();\r\n        audioCtl.load();\r\n        audioCtl = null;\r\n    }\r\n    if (intervalHandler !== null) {\r\n        clearInterval(intervalHandler);\r\n    }\r\n};\r\n\r\nAudioLib.RemoveRecord = (saveId) => {\r\n    localStorage.removeItem(saveId);\r\n    DeleteData(saveId);\r\n};\r\n\r\nAudioLib.Download = (saveId, name = \"audio\") => {\r\n    const filename = name + \".webm\";\r\n\r\n    if (audioCtl !== null) {\r\n        AudioLib.Stop();\r\n    }\r\n    GetData(saveId, (data) => {\r\n        const blob = new Blob([data.audio_file], {type: mimeType});\r\n\r\n        let audioURL = URL.createObjectURL(blob);\r\n\r\n        const a = document.createElement(\"a\");\r\n        a.style.display = \"none\";\r\n        a.href = audioURL;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        URL.revokeObjectURL(audioURL);\r\n    });\r\n};\r\n\r\nexport default AudioLib;\r\n","import {PLAY_AUDIO, STOP_AUDIO} from \"./types\";\r\n\r\nexport const playAudio = (idAudio, name) => async (dispatch) => {\r\n    dispatch({\r\n        type: PLAY_AUDIO,\r\n        payload: {idAudio, name},\r\n    });\r\n};\r\n\r\nexport const stopAudio = () => async (dispatch) => {\r\n    dispatch({type: STOP_AUDIO});\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteRecord, saveRecord} from \"../actions/record\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/pt-br\";\r\nimport Dialog from \"./Dialog\";\r\nimport AudioLib from \"../utils/AudioLib\";\r\nimport {playAudio, stopAudio} from \"../actions/audio\";\r\n\r\nconst RecordElement = ({\r\n    record,\r\n    deleteRecord,\r\n    saveRecord,\r\n    playAudio,\r\n    stopAudio,\r\n}) => {\r\n    const [displayDialog, setDisplayDialog] = useState(false);\r\n    const [name, setName] = useState(record.name);\r\n    const [editing, setEditing] = useState(false);\r\n    const [audioUrl, setAudioUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        AudioLib.GetDataURL(record.id, function (dataUrl) {\r\n            setAudioUrl(dataUrl);\r\n        });\r\n    }, [record]);\r\n\r\n    const deleteButton = () => {\r\n        setDisplayDialog(true);\r\n    };\r\n    const confirmDeletion = () => {\r\n        deleteRecord(record.id);\r\n        AudioLib.RemoveRecord(record.id);\r\n    };\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setEditing(false);\r\n        saveRecord({...record, name});\r\n    };\r\n    const onPlayButton = () => {\r\n        playAudio(record.id, name);\r\n    };\r\n    const onDownloadButton = () => {\r\n        AudioLib.Download(record.id, name);\r\n    };\r\n    return (\r\n        <div className=\"record-element card\">\r\n            {displayDialog ? (\r\n                <Dialog\r\n                    message={`Excluir permanentemente \"${record.name.toUpperCase()}\"?`}\r\n                    positiveAction={() => confirmDeletion()}\r\n                    cancelAction={() => setDisplayDialog(false)}\r\n                />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n            <div className=\"card-head\">\r\n                {editing ? (\r\n                    <form onSubmit={(e) => onSubmit(e)}>\r\n                        <input\r\n                            autoFocus\r\n                            className=\"cardEdit\"\r\n                            type=\"text\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            onBlur={(e) => onSubmit(e)}\r\n                            maxLength={20}\r\n                        />\r\n                    </form>\r\n                ) : (\r\n                    <div onClick={() => setEditing(true)}>\r\n                        <span>{record.name}</span>{\" \"}\r\n                    </div>\r\n                )}\r\n                {audioUrl !== undefined && audioUrl !== null && (\r\n                    <audio id={`HTMLMediaElementPlayer_${record.id}`}>\r\n                        <source src={audioUrl} type=\"audio/webm\"></source>\r\n                    </audio>\r\n                )}\r\n            </div>\r\n            <div className=\"card-datetime\">\r\n                {moment(record.timestamp).format(\"L - LT\")}\r\n            </div>\r\n            <div className=\"card-length\">{record.recLength}</div>\r\n            <div className=\"actions\">\r\n                <div className=\"icon-button\" onClick={() => onPlayButton()}>\r\n                    <i className=\"material-icons\">play_arrow</i>\r\n                </div>\r\n                <div className=\"icon-button\" onClick={() => onDownloadButton()}>\r\n                    <i className=\"material-icons\">get_app</i>\r\n                </div>\r\n                <div className=\"icon-button\" onClick={() => deleteButton()}>\r\n                    <i className=\"material-icons\">delete</i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRecordElement.propTypes = {\r\n    record: PropTypes.object.isRequired,\r\n    deleteRecord: PropTypes.func.isRequired,\r\n    saveRecord: PropTypes.func.isRequired,\r\n    playAudio: PropTypes.func.isRequired,\r\n    stopAudio: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {deleteRecord, saveRecord, playAudio, stopAudio})(\r\n    RecordElement\r\n);\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div>\r\n            <h4> Carregando... </h4>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport RecordElement from \"./RecordElement\";\r\nimport {connect} from \"react-redux\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst RecordsView = ({record: {records, loading}}) => {\r\n    return loading ? (\r\n        <Loading />\r\n    ) : (\r\n        <div className=\"records-list\">\r\n            <div id=\"audio\"></div>\r\n            {records &&\r\n                records.length > 0 &&\r\n                records.map((record) => (\r\n                    <RecordElement\r\n                        key={record.id}\r\n                        record={{\r\n                            name: record.name,\r\n                            timestamp: record.timestamp,\r\n                            recLength: record.recLength,\r\n                            id: record.id,\r\n                        }}></RecordElement>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nRecordsView.propTypes = {\r\n    recordings: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({record}) => ({\r\n    record:\r\n        record.query === undefined || record.query === \"\"\r\n            ? record\r\n            : {\r\n                  ...record,\r\n                  records: record.records.filter(\r\n                      (rec) =>\r\n                          rec.name\r\n                              .toUpperCase()\r\n                              .indexOf(record.query.toUpperCase()) >= 0\r\n                  ),\r\n              },\r\n});\r\n\r\nexport default connect(mapStateToProps)(RecordsView);\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {PropTypes} from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {addRecord} from \"../actions/record\";\r\nimport AudioLib from \"../utils/AudioLib\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst NewRecording = ({addRecord, cancelAction}) => {\r\n    const [uuid, setUuid] = useState(null);\r\n    const [timer, setTimer] = useState(0);\r\n    const [isRecording, setRecording] = useState(false);\r\n    const [splitTimer, setSplitTimer] = useState({\r\n        minutes: 0,\r\n        seconds: 0,\r\n        milliseconds: 0,\r\n    });\r\n\r\n    const recordBegin = () => {\r\n        setRecording(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (uuid === null) {\r\n            const id = uuidv4();\r\n            setUuid(id);\r\n            AudioLib.StartRecording(id, () => recordBegin());\r\n        }\r\n        let intervalHandler = setInterval(() => {\r\n            if (isRecording) {\r\n                setTimer((timer) => timer + 100);\r\n                const currentDate = new Date(timer);\r\n                setSplitTimer({\r\n                    minutes: currentDate.getMinutes(),\r\n                    seconds: currentDate.getSeconds(),\r\n                    milliseconds: currentDate.getMilliseconds(),\r\n                });\r\n            }\r\n        }, 100);\r\n        return () => clearInterval(intervalHandler);\r\n    }, [uuid, timer, isRecording, setUuid]);\r\n    const saveRecording = () => {\r\n        const record = {\r\n            id: uuid,\r\n            name: \"Novo rec \" + new Date().getSeconds().toString(),\r\n            timestamp: 0,\r\n            recLength: `${splitTimer.minutes}:${splitTimer.seconds}.${\r\n                splitTimer.milliseconds / 100\r\n            }`,\r\n        };\r\n        AudioLib.StopRecording();\r\n        addRecord(record);\r\n    };\r\n    const stop = () => {\r\n        saveRecording();\r\n        cancelAction();\r\n    };\r\n    return (\r\n        <div className={`overlay-visible`}>\r\n            <div className=\"card dialog\">\r\n                <div className=\"title\">Gravando...</div>\r\n                <div className=\"message\">\r\n                    {splitTimer.minutes}:{splitTimer.seconds}.\r\n                    {splitTimer.milliseconds / 100}\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <div className=\"icon-button\" onClick={() => stop()}>\r\n                        <i className=\"material-icons\">stop</i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nNewRecording.prototype = {\r\n    addRecord: PropTypes.func.isRequired,\r\n    cancelAction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, {addRecord})(NewRecording);\r\n","import React, {useState, Fragment} from \"react\";\r\nimport NewRecording from \"./NewRecording\";\r\n\r\nconst RecordButton = () => {\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const stopRecording = () => {\r\n        setModalOpen(false);\r\n    };\r\n    return (\r\n        <Fragment>\r\n            {modalOpen ? (\r\n                <NewRecording cancelAction={() => stopRecording()} />\r\n            ) : (\r\n                <div className=\"fab\" onClick={() => setModalOpen(true)}>\r\n                    <div className=\"icon-button\">\r\n                        <i className=\"material-icons\"> mic </i>{\" \"}\r\n                    </div>{\" \"}\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RecordButton;\r\n","import {\r\n    GET_RECORDS,\r\n    ADD_RECORD,\r\n    DELETE_RECORD,\r\n    SAVE_RECORD,\r\n    UPDATE_QUERY,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    records: [],\r\n    loading: true,\r\n    error: {},\r\n    query: \"\",\r\n    lastRecordingIndex: 0,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case GET_RECORDS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        case DELETE_RECORD:\r\n            return {\r\n                ...state,\r\n                records: state.records.filter((rec) => rec.id !== payload),\r\n                loading: false,\r\n            };\r\n        case ADD_RECORD:\r\n            return {\r\n                ...state,\r\n                records: [payload, ...state.records],\r\n                loading: false,\r\n            };\r\n        case SAVE_RECORD:\r\n            return {\r\n                ...state,\r\n                records: state.records.map((rec) =>\r\n                    rec.id === payload.id ? {...rec, name: payload.name} : rec\r\n                ),\r\n            };\r\n        case UPDATE_QUERY:\r\n            return {\r\n                ...state,\r\n                query: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {PLAY_AUDIO, STOP_AUDIO} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    isPlaying: false,\r\n    error: {},\r\n    idAudio: \"\",\r\n    name: \"\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch (type) {\r\n        case PLAY_AUDIO:\r\n            return {\r\n                ...state,\r\n                isPlaying: true,\r\n                idAudio: payload.idAudio,\r\n                name: payload.name,\r\n            };\r\n        case STOP_AUDIO:\r\n            return {\r\n                isPlaying: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {OPEN_MENU, CLOSE_MENU} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    menuStatus: \"close\",\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    const {type} = action;\r\n    switch (type) {\r\n        case OPEN_MENU:\r\n            return {\r\n                ...state,\r\n                menuStatus: \"open\",\r\n            };\r\n        case CLOSE_MENU:\r\n            return {\r\n                ...state,\r\n                menuStatus: \"close\",\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport record from \"./record\";\r\nimport audio from \"./audio\";\r\nimport config from \"./config\";\r\n\r\nexport default combineReducers({\r\n    record,\r\n    audio,\r\n    config,\r\n});\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst persistedState = localStorage.getItem(\"reduxState\")\r\n    ? JSON.parse(localStorage.getItem(\"reduxState\"))\r\n    : initialState;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\r\n});\r\n\r\nexport default store;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {stopAudio} from \"../actions/audio\";\r\nimport AudioLib from \"../utils/AudioLib\";\r\n\r\nconst AudioPlayer = ({audio, stopAudio}) => {\r\n    const [audioLib] = useState(AudioLib);\r\n    const {isPlaying, idAudio} = audio;\r\n    useEffect(() => {\r\n        const onStop = () => {\r\n            stopAudio();\r\n        };\r\n        if (isPlaying) {\r\n            audioLib.Play(idAudio, () => onStop());\r\n        } else {\r\n            audioLib.Stop();\r\n        }\r\n    }, [isPlaying, idAudio, stopAudio, audioLib]);\r\n    const stopButton = () => {\r\n        stopAudio();\r\n    };\r\n    return (\r\n        <div className={`card player ${isPlaying ? \"show\" : \"close\"}`}>\r\n            <div>{isPlaying ? \"Playing...\" : \"Stopped\"}</div>\r\n            <div>{audio.name}</div>\r\n            <div className=\"icon-button\" onClick={() => stopButton()}>\r\n                <i className=\"material-icons\">stop</i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nAudioPlayer.propTypes = {\r\n    audio: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({audio}) => ({\r\n    audio,\r\n});\r\n\r\nexport default connect(mapStateToProps, {stopAudio})(AudioPlayer);\r\n","import React, {useEffect} from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport RecordsView from \"./components/RecordsView\";\r\nimport RecordButton from \"./components/RecordButton\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport {getRecords, updateQuery} from \"./actions/record\";\r\nimport {stopAudio} from \"./actions/audio\";\r\nimport {initStorage} from \"./utils/startup\";\r\nimport AudioPlayer from \"./components/AudioPlayer\";\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        store.dispatch(stopAudio());\r\n        store.dispatch(getRecords());\r\n        initStorage();\r\n        store.dispatch(updateQuery(\"\"));\r\n    }, []);\r\n    return (\r\n        <Provider store={store}>\r\n            <NavBar />\r\n            <main>\r\n                <RecordsView recordings={[]} />\r\n                <AudioPlayer />\r\n                <RecordButton />\r\n            </main>\r\n        </Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","export const initStorage = () => {\r\n    if (localStorage.getItem(\"records\") === \"\") {\r\n        console.log(\"config\");\r\n        localStorage.setItem(\"records\", JSON.stringify([]));\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}